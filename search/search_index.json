{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cinder + Superhero Learn more Theme A Superhero-inspired theme based on Cinder for MKDocs Cinder: http://sourcefoundry.org/cinder/ Superhero: https://bootswatch.com/superhero/ MKDocs: https://www.mkdocs.org This is how documentation will look like: Usage: Install MKDocs according to https://www.mkdocs.org/#installation Run mkdocs serve to host a live version of your documents, watch them at http://localhost:8000/ Run mkdocs build to make a static web page out of your documentation inside site Edit the documentation markdown files in docs to make your own documentation Why? Why??? The original Cinder implementation is great but has some design decisions which are fixed here: For a privacy-aware implementation we do not want any external links. Therefore all context, loaded by CDNs or other sources (google etc.) had been either removed or completely embedded. This MKDocs theme is now privacy-aware! The very bright appearance of Cinder does not fit Programming-oriented colour styles where we prefer a dark appearance. As a reference the superhero implementation is the best place to steal styles and colours. So this is like the dark version of Cinder.","title":"Home"},{"location":"#this-is-how-documentation-will-look-like","text":"","title":"This is how documentation will look like:"},{"location":"#usage","text":"Install MKDocs according to https://www.mkdocs.org/#installation Run mkdocs serve to host a live version of your documents, watch them at http://localhost:8000/ Run mkdocs build to make a static web page out of your documentation inside site Edit the documentation markdown files in docs to make your own documentation","title":"Usage:"},{"location":"#why-why","text":"The original Cinder implementation is great but has some design decisions which are fixed here: For a privacy-aware implementation we do not want any external links. Therefore all context, loaded by CDNs or other sources (google etc.) had been either removed or completely embedded. This MKDocs theme is now privacy-aware! The very bright appearance of Cinder does not fit Programming-oriented colour styles where we prefer a dark appearance. As a reference the superhero implementation is the best place to steal styles and colours. So this is like the dark version of Cinder.","title":"Why? Why???"},{"location":"cinder/","text":"Cinder + Superhero for MkDocs About Cinder is a clean, responsive theme for static documentation sites that are generated with MkDocs . It's built on the Bootstrap 3 framework and includes pre-packaged: highlight.js v9.13.1 syntax highlighting with support for over 25 programming languages FontAwesome v5.13 icon support smashingly legible type scheme to get your message out to your users You are viewing the theme in action and can see a selection of the theme elements on the Specimen page . Install Required : Python 2.7 or 3.4+ Install MkDocs & Create a New Project If you haven't installed MkDocs yet, use the following command to install it: $ pip install mkdocs Next, navigate to a clean directory and create a new MkDocs project with the following command: $ mkdocs new [projectname] Replace [projectname] with the name of your project (without the brackets). Then navigate to the root of your project directory: $ cd [projectname] Install the Cinder Theme Choose one of the following install approaches: 1. Install with pip (Recommended) If you are using MkDocs v0.15.0 or higher, you can install the Cinder theme with the Python package manager pip using the command: $ pip install mkdocs-cinder MkDocs projects use a YAML settings file called mkdocs.yml . This is located in the root of your project directory after you use the mkdocs new command. Open the file in a text editor and modify it to define Cinder in the theme setting as follows (note that this is case-sensitive): site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder-superhero' nav: - Home: index.md Updates with pip Update your pip-installed Cinder theme to new releases with the command: $ pip install --upgrade mkdocs-cinder Then rebuild the static files (see documentation below) 2. Manual Install Download the Cinder theme archive by clicking the button below. Download Cinder Unpack the contents of the archive into a directory named cinder at the top level of your MkDocs project directory. Your project directory should now look like this: . \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 cinder \u2502 \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 js \u2502 \u251c\u2500\u2500 base.html \u2502 \u251c\u2500\u2500 content.html \u2502 \u251c\u2500\u2500 404.html \u2502 \u251c\u2500\u2500 nav-sub.html \u2502 \u251c\u2500\u2500 nav.html \u2502 \u2514\u2500\u2500 toc.html \u2514\u2500\u2500 docs \u2514\u2500\u2500 index.md MkDocs projects use a YAML settings file called mkdocs.yml . This is located in the root of your project directory after you use the mkdocs new command. Open the file in a text editor and modify it to include the theme settings as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder-superhero' nav: - Home: index.md See the MkDocs documentation for additional details. Updates, the Manual Approach If you choose the manual install approach, you can update your Cinder theme by downloading the new cinder.zip release archive and including it in your project. Then re-build your static site files (see instructions below). Test with a Local Site Server Use the following command to establish a local server for your site: $ mkdocs serve Then open your site in any browser at the URL http://localhost:8000 . Create Your Site Add Content with Markdown Syntax Get to work on your site home page by opening the docs/index.md file and editing it in Markdown syntax. The HTML automatically updates in the browser when you save the Markdown file if you use the MkDocs server (see command above). Add New Pages Add new pages to your site by creating a new Markdown file in your docs directory, then linking to the new page in the mkdocs.yml file. This uses a Page Name : Markdown file syntax. For example, to add an About page using a Markdown file that is located on the path docs/about.md , you would format the mkdocs.yml file as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' nav: - Home: index.md - About: about.md Add additional pages to your site by repeating the above series of steps. Build Your Site Build your site files with the command: $ mkdocs build Your site files are built in the site directory and are ready to use. Deploy the contents of the site directory to your web server. Site Customization The following are a few common customizations that you might be interested in. For much more detail about the configuration of your site, check out the MkDocs Configuration documentation . Site Favicon Place your site favicon image file in the top level of your docs directory and then include a new site_favicon: field in the mkdocs.yml file: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' site_favicon: favicon.ico nav: - Home: index.md - About: about.md Add Your Own CSS Stylesheets Create a css directory inside your docs directory and add your CSS files. You can overwrite any of the Cinder styles in your CSS files. Then include your CSS files in the mkdocs.yml file with the extra_css field: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' extra_css: - \"css/mystyle.css\" - \"css/myotherstyle.css\" nav: - Home: index.md - About: about.md Your CSS styles fall at the end of the cascade and will override all styles included in the theme (including Bootstrap and default Cinder styles). You can find the Cinder and Bootstrap CSS files on the paths cinder/css/cinder.css and cinder/css/bootstrap.min.css , respectively. Add Your Own JavaScript Create a js directory inside your docs directory and add your JS files. Then include your JS files in the mkdocs.yml file with the extra_js field: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' extra_js: - \"js/myscript.js\" - \"js/myotherscript.js\" nav: - Home: index.md - About: about.md Keyboard shortcuts In your mkdocs.yml file, place the following to enable keyboard shortcuts. shortcuts: help: 191 # ? next: 39 # right arrow previous: 37 # left arrow search: 83 # s The numbers correspond to the key that you would like to use for that shortcut. You can use https://keycode.info/ to find the keycode you want. Extending Cinder Create a new directory within your project (e.g., cinder-theme-ext/ ) and create main.html . Add the following line at the top of the HTML file. {% extends \"base.html\" %} Instead of using theme: cinder or theme_dir: cinder in mkdocs.yml , use: theme: name: cinder custom_dir: [custom dir] Refer to MkDocs Documentation - Using the theme custom_dir for more information. Use the following examples as reference. You can put your own Jinja2 within the blocks. More information can be found in MkDocs Documentation - Overriding Template Blocks . Adding extra HTML to the head tag Append to main.html : {% block extrahead %} <meta name=\"author\" content=\"{{ page.meta.author }}\"> {% endblock %} Replacing footer Append to main.html : {% block footer %} <hr> <p>{% if config.copyright %} <small>{{ config.copyright }}<br></small> {% endif %} <small>Documentation built with <a href=\"http://www.mkdocs.org/\">MkDocs</a>.</small> {% if page.meta.revision_date %} <small><br><i>Updated {{ page.meta.revision_date }}</i></small> {% endif %} </p> {% endblock %} page.meta.revision_date can be set by using meta-data (front-matter) at the beginning of your Markdown document or using mkdocs-git-revision-date-plugin . Github or Bitbucket Repository Link Include the repo_url field and define it with your repository URL: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' repo_url: \"https://github.com/chrissimpkins/cinder\" nav: - Home: index.md - About: about.md The link appears at the upper right hand corner of your site. License Declaration and Link The Cinder theme displays your license declaration in the footer if you include a copyright field and define it with the text (and optionally the HTML link) that you would like to display: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' copyright: \"Cinder is licensed under the <a href='https://github.com/chrissimpkins/cinder/blob/master/LICENSE.md'>MIT license \" nav: - Home: index.md - About: about.md Issues If you have any issues with the theme, please report them on the Cinder repository: Report Issue Active Issues License Cinder is licensed under the MIT license .","title":"Cinder"},{"location":"cinder/#about","text":"Cinder is a clean, responsive theme for static documentation sites that are generated with MkDocs . It's built on the Bootstrap 3 framework and includes pre-packaged: highlight.js v9.13.1 syntax highlighting with support for over 25 programming languages FontAwesome v5.13 icon support smashingly legible type scheme to get your message out to your users You are viewing the theme in action and can see a selection of the theme elements on the Specimen page .","title":"About"},{"location":"cinder/#install","text":"Required : Python 2.7 or 3.4+","title":"Install"},{"location":"cinder/#install-mkdocs-create-a-new-project","text":"If you haven't installed MkDocs yet, use the following command to install it: $ pip install mkdocs Next, navigate to a clean directory and create a new MkDocs project with the following command: $ mkdocs new [projectname] Replace [projectname] with the name of your project (without the brackets). Then navigate to the root of your project directory: $ cd [projectname]","title":"Install MkDocs &amp; Create a New Project"},{"location":"cinder/#install-the-cinder-theme","text":"Choose one of the following install approaches:","title":"Install the Cinder Theme"},{"location":"cinder/#1-install-with-pip-recommended","text":"If you are using MkDocs v0.15.0 or higher, you can install the Cinder theme with the Python package manager pip using the command: $ pip install mkdocs-cinder MkDocs projects use a YAML settings file called mkdocs.yml . This is located in the root of your project directory after you use the mkdocs new command. Open the file in a text editor and modify it to define Cinder in the theme setting as follows (note that this is case-sensitive): site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder-superhero' nav: - Home: index.md","title":"1. Install with pip (Recommended)"},{"location":"cinder/#2-manual-install","text":"Download the Cinder theme archive by clicking the button below. Download Cinder Unpack the contents of the archive into a directory named cinder at the top level of your MkDocs project directory. Your project directory should now look like this: . \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 cinder \u2502 \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 js \u2502 \u251c\u2500\u2500 base.html \u2502 \u251c\u2500\u2500 content.html \u2502 \u251c\u2500\u2500 404.html \u2502 \u251c\u2500\u2500 nav-sub.html \u2502 \u251c\u2500\u2500 nav.html \u2502 \u2514\u2500\u2500 toc.html \u2514\u2500\u2500 docs \u2514\u2500\u2500 index.md MkDocs projects use a YAML settings file called mkdocs.yml . This is located in the root of your project directory after you use the mkdocs new command. Open the file in a text editor and modify it to include the theme settings as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder-superhero' nav: - Home: index.md See the MkDocs documentation for additional details.","title":"2. Manual Install"},{"location":"cinder/#test-with-a-local-site-server","text":"Use the following command to establish a local server for your site: $ mkdocs serve Then open your site in any browser at the URL http://localhost:8000 .","title":"Test with a Local Site Server"},{"location":"cinder/#create-your-site","text":"","title":"Create Your Site"},{"location":"cinder/#add-content-with-markdown-syntax","text":"Get to work on your site home page by opening the docs/index.md file and editing it in Markdown syntax. The HTML automatically updates in the browser when you save the Markdown file if you use the MkDocs server (see command above).","title":"Add Content with Markdown Syntax"},{"location":"cinder/#add-new-pages","text":"Add new pages to your site by creating a new Markdown file in your docs directory, then linking to the new page in the mkdocs.yml file. This uses a Page Name : Markdown file syntax. For example, to add an About page using a Markdown file that is located on the path docs/about.md , you would format the mkdocs.yml file as follows: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' nav: - Home: index.md - About: about.md Add additional pages to your site by repeating the above series of steps.","title":"Add New Pages"},{"location":"cinder/#build-your-site","text":"Build your site files with the command: $ mkdocs build Your site files are built in the site directory and are ready to use. Deploy the contents of the site directory to your web server.","title":"Build Your Site"},{"location":"cinder/#site-customization","text":"The following are a few common customizations that you might be interested in. For much more detail about the configuration of your site, check out the MkDocs Configuration documentation .","title":"Site Customization"},{"location":"cinder/#site-favicon","text":"Place your site favicon image file in the top level of your docs directory and then include a new site_favicon: field in the mkdocs.yml file: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' site_favicon: favicon.ico nav: - Home: index.md - About: about.md","title":"Site Favicon"},{"location":"cinder/#add-your-own-css-stylesheets","text":"Create a css directory inside your docs directory and add your CSS files. You can overwrite any of the Cinder styles in your CSS files. Then include your CSS files in the mkdocs.yml file with the extra_css field: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' extra_css: - \"css/mystyle.css\" - \"css/myotherstyle.css\" nav: - Home: index.md - About: about.md Your CSS styles fall at the end of the cascade and will override all styles included in the theme (including Bootstrap and default Cinder styles). You can find the Cinder and Bootstrap CSS files on the paths cinder/css/cinder.css and cinder/css/bootstrap.min.css , respectively.","title":"Add Your Own CSS Stylesheets"},{"location":"cinder/#add-your-own-javascript","text":"Create a js directory inside your docs directory and add your JS files. Then include your JS files in the mkdocs.yml file with the extra_js field: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' extra_js: - \"js/myscript.js\" - \"js/myotherscript.js\" nav: - Home: index.md - About: about.md","title":"Add Your Own JavaScript"},{"location":"cinder/#keyboard-shortcuts","text":"In your mkdocs.yml file, place the following to enable keyboard shortcuts. shortcuts: help: 191 # ? next: 39 # right arrow previous: 37 # left arrow search: 83 # s The numbers correspond to the key that you would like to use for that shortcut. You can use https://keycode.info/ to find the keycode you want.","title":"Keyboard shortcuts"},{"location":"cinder/#extending-cinder","text":"Create a new directory within your project (e.g., cinder-theme-ext/ ) and create main.html . Add the following line at the top of the HTML file. {% extends \"base.html\" %} Instead of using theme: cinder or theme_dir: cinder in mkdocs.yml , use: theme: name: cinder custom_dir: [custom dir] Refer to MkDocs Documentation - Using the theme custom_dir for more information. Use the following examples as reference. You can put your own Jinja2 within the blocks. More information can be found in MkDocs Documentation - Overriding Template Blocks .","title":"Extending Cinder"},{"location":"cinder/#adding-extra-html-to-the-head-tag","text":"Append to main.html : {% block extrahead %} <meta name=\"author\" content=\"{{ page.meta.author }}\"> {% endblock %}","title":"Adding extra HTML to the head tag"},{"location":"cinder/#replacing-footer","text":"Append to main.html : {% block footer %} <hr> <p>{% if config.copyright %} <small>{{ config.copyright }}<br></small> {% endif %} <small>Documentation built with <a href=\"http://www.mkdocs.org/\">MkDocs</a>.</small> {% if page.meta.revision_date %} <small><br><i>Updated {{ page.meta.revision_date }}</i></small> {% endif %} </p> {% endblock %} page.meta.revision_date can be set by using meta-data (front-matter) at the beginning of your Markdown document or using mkdocs-git-revision-date-plugin .","title":"Replacing footer"},{"location":"cinder/#github-or-bitbucket-repository-link","text":"Include the repo_url field and define it with your repository URL: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' repo_url: \"https://github.com/chrissimpkins/cinder\" nav: - Home: index.md - About: about.md The link appears at the upper right hand corner of your site.","title":"Github or Bitbucket Repository Link"},{"location":"cinder/#license-declaration-and-link","text":"The Cinder theme displays your license declaration in the footer if you include a copyright field and define it with the text (and optionally the HTML link) that you would like to display: site_name: [YOURPROJECT] theme: name: null custom_dir: 'cinder' copyright: \"Cinder is licensed under the <a href='https://github.com/chrissimpkins/cinder/blob/master/LICENSE.md'>MIT license \" nav: - Home: index.md - About: about.md","title":"License Declaration and Link"},{"location":"cinder/#issues","text":"If you have any issues with the theme, please report them on the Cinder repository: Report Issue Active Issues","title":"Issues"},{"location":"cinder/#license","text":"Cinder is licensed under the MIT license .","title":"License"},{"location":"specimen/","text":"Cinder Theme Specimen Typography Typefaces Headers: PT Sans Body: Open Sans Code: Hack Body Copy You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 . Lead Body Copy Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus. Headings All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline. h1. Heading h2. Heading h3. Heading h4. Heading h5. Heading h6. Heading h1. Heading Secondary text h2. Heading Secondary text h3. Heading Secondary text h4. Heading Secondary text h5. Heading Secondary text h6. Heading Secondary text Blockquotes Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title Lists mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Horizontal Description Lists Something This is something SomethingElse This is something else Contextual Colors Lorem ipsum dolor sit amet, consectetur adipiscing elit. (muted) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (primary) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (success) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (info) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (warning) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (danger) Code Inline Code This is an example of inline code #import requests Preformatted Code Blocks with Syntax Highlighting def request(method, url, **kwargs): \"\"\"Constructs and sends a :class:`Request `. Usage:: >>> import requests >>> req = requests.request('GET', 'https://httpbin.org/get') \"\"\" # By using the 'with' statement we are sure the session is closed, thus we # avoid leaving sockets open which can trigger a ResourceWarning in some # cases, and look like a memory leak in others. with sessions.Session() as session: return session.request(method=method, url=url, **kwargs) def get(url, params=None, **kwargs): r\"\"\"Sends a GET request. :param url: URL for the new :class:`Request` object. :param params: (optional) Dictionary, list of tuples or bytes to send in the body of the :class:`Request`. :param \\*\\*kwargs: Optional arguments that ``request`` takes. :return: :class:`Response ` object :rtype: requests.Response \"\"\" kwargs.setdefault('allow_redirects', True) return request('get', url, params=params, **kwargs) (Source code sample from the Python requests library , Apache License, v2.0 ) Syntax highlighting support is available for the following languages: Apache Bash C# C++ CSS CoffeeScript Diff Go HTML/XML HTTP Ini, TOML JSON Java JavaScript Makefile Markdown Nginx Objective-C PHP Perl Properties Python R Ruby Rust SQL Shell Session Swift YAML Note Include source code formatted in Github-flavored Markdown fenced code blocks with an info string that defines the supported programming language to automate syntax highlighting when your site is built. Tables Striped Table # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Bordered Table # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Buttons Default Buttons Link Button Styled Buttons Default Primary Success Info Warning Danger Button Sizes Large button Large button Default button Default button Small button Small button Extra small button Extra small button Block Level Buttons Block level button Block level button Alerts A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out! Callouts Default Callout This is a default callout. Primary Callout This is a primary callout. Success Callout This is a success callout. Info Callout This is an info callout. Warning Callout This is a warning callout. Danger Callout This is a danger callout. Admonitions The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a note def func(arg) { # notable things are in here! return None } Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a warning def func(arg) { # be careful! return None } Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is dangerous def func(arg) { # BOOM! return None }","title":"Specimen"},{"location":"specimen/#typography","text":"","title":"Typography"},{"location":"specimen/#typefaces","text":"Headers: PT Sans Body: Open Sans Code: Hack","title":"Typefaces"},{"location":"specimen/#body-copy","text":"You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 .","title":"Body Copy"},{"location":"specimen/#lead-body-copy","text":"Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.","title":"Lead Body Copy"},{"location":"specimen/#headings","text":"All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline.","title":"Headings"},{"location":"specimen/#blockquotes","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title","title":"Blockquotes"},{"location":"specimen/#lists","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Lists"},{"location":"specimen/#horizontal-description-lists","text":"Something This is something SomethingElse This is something else","title":"Horizontal Description Lists"},{"location":"specimen/#contextual-colors","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. (muted) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (primary) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (success) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (info) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (warning) Lorem ipsum dolor sit amet, consectetur adipiscing elit. (danger)","title":"Contextual Colors"},{"location":"specimen/#code","text":"","title":"Code"},{"location":"specimen/#inline-code","text":"This is an example of inline code #import requests","title":"Inline Code"},{"location":"specimen/#tables","text":"","title":"Tables"},{"location":"specimen/#striped-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Striped Table"},{"location":"specimen/#bordered-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Bordered Table"},{"location":"specimen/#buttons","text":"","title":"Buttons"},{"location":"specimen/#default-buttons","text":"Link Button","title":"Default Buttons"},{"location":"specimen/#styled-buttons","text":"Default Primary Success Info Warning Danger","title":"Styled Buttons"},{"location":"specimen/#button-sizes","text":"Large button Large button Default button Default button Small button Small button Extra small button Extra small button","title":"Button Sizes"},{"location":"specimen/#block-level-buttons","text":"Block level button Block level button","title":"Block Level Buttons"},{"location":"specimen/#alerts","text":"A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out!","title":"Alerts"},{"location":"specimen/#callouts","text":"","title":"Callouts"},{"location":"specimen/#admonitions","text":"The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a note def func(arg) { # notable things are in here! return None } Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a warning def func(arg) { # be careful! return None } Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is dangerous def func(arg) { # BOOM! return None }","title":"Admonitions"}]}